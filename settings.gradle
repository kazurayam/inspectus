plugins {
    id("com.gradle.enterprise") version("3.9")
}

rootProject.name = 'inspectus'

dependencyResolutionManagement {
    versionCatalogs {
        libs {
            version('ashot', '1.5.4')
            library('ashot', 'ru.yandex.qatools.ashot', 'ashot').versionRef('ashot')

            version('ashotwrapper', '0.2.1')
            library('ashotwrapper', 'com.kazurayam', 'ashotwrapper').versionRef('ashotwrapper')

            version('commons-csv', '1.9.0')
            library('commons-csv', 'org.apache.commons','commons-csv').versionRef('commons-csv')

            version('commons-io', '2.11.0')
            library('commons-io', 'commons-io', 'commons-io').versionRef('commons-io')

            version('httpclient', '5.2')
            library('httpclient', 'org.apache.httpcomponents.client5', 'httpclient5').versionRef('httpclient')

            version('jsoup', '1.14.3')
            library('jsoup', 'org.jsoup', 'jsoup').versionRef('jsoup')

            version('junit5', '5.8.2')
            library('junit-jupiter', 'org.junit.jupiter', 'junit-jupiter').versionRef('junit5')
            library('junit-jupiter-api', 'org.junit.jupiter', 'junit-jupiter-api').versionRef('junit5')
            library('junit-jupiter-engine', 'org.junit.jupiter', 'junit-jupiter-engine').versionRef('junit5')

            version('log4j', '2.19.0')
            library('log4j-core', 'org.apache.logging.log4j', 'log4j-core').versionRef('log4j')

            version('materialstore', '0.17.0')
            library('materialstore', 'com.kazurayam', 'materialstore').versionRef('materialstore')

            version('poi', '5.2.3')
            library('poi', 'org.apache.poi','poi-ooxml').versionRef('poi')

            version('selenium3', '3.141.59')
            library('selenium3', 'org.seleniumhq.selenium', 'selenium-java').versionRef('selenium3')

            version('selenium4', '4.6.0')
            library('selenium4', 'org.seleniumhq.selenium', 'selenium-java').versionRef('selenium4')

            version('slf4j', '1.7.25')
            library('slf4j-api', 'org.slf4j', 'slf4j-api').versionRef('slf4j')
            library('slf4j-simple', 'org.slf4j', 'slf4j-simple').versionRef('slf4j')

            version('webdrivermanager', '5.6.2')
            library('webdrivermanager', 'io.github.bonigarcia', 'webdrivermanager').versionRef('webdrivermanager')
        }
    }
}


gradleEnterprise {
    if (System.getenv("CI") != null) {
        buildScan {
            publishAlways()
            termsOfServiceUrl = "https://gradle.com/terms-of-service"
            termsOfServiceAgree = "yes"
        }
    }
}
